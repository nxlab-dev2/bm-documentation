Project beautymates {
  database_type: 'MySQL'
  note: 'Ecommerce site database'
}

Table "user" {
  "id" int(10) [pk, not null]
  "name" varchar(191) [default: NULL]
  "avatar" varchar(191) [default: NULL]
  "email" varchar(191) [not null]
  "password" varchar(191) [not null]
  "initials_code" varchar(191) [default: NULL, note: "initials code for customer service like CS001, CS002"]
  "remember_token" varchar(100) [default: NULL]
  "created_at" timestamp [default: 'now()']
  "updated_at" timestamp [default: NULL]
  "deleted_at" timestamp [default: NULL]

  note: "table 'user' contain user credentials, this table used for used for user administrator like admin, super admin, etc."
}

Table "role" {
  "id" bigint(20) [pk, not null]
  "name" varchar(191) [not null]
  "guard_name" varchar(191) [not null, note: "(generated by laravel package) this column for the definition is how the system should store and retrieve information about the user"]
  "is_default" tinyint(1) [not null, default: "0"]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]

  note: 'role that contain list of role name. A role is a set of one or more permission and can be assigned to a user to grant a set of permission. '
}

Table "permission" {
  "id" bigint(20) [pk, not null]
  "name" varchar(191) [not null]
  "guard_name" varchar(191) [not null,  note: "(generated by laravel package) this column for the definition is how the system should store and retrieve information about the user"]
  "group_name" varchar(191) [default: NULL, note: 'name of group permission']
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]

  note: 'A permission grants user the ability to perform an action.'
}

Table "role_has_permission" {
  "permission_id" bigint(20) [not null, ref: > permission.id]
  "role_id" bigint(20) [not null, ref: > role.id]

  Indexes {
    (permission_id, role_id) [pk]
  }
}

Table "user_has_permission" {
  "permission_id" bigint(20) [not null, ref: > permission.id]
  "user_id" bigint(20) [not null, ref: > user.id]

  Indexes {
    (permission_id, user_id) [pk]
  }
}

Table "user_has_role" {
  "role_id" bigint(20) [not null, ref: > role.id]
  "user_id" bigint(20) [not null, ref: > user.id]

  Indexes {
    (role_id, user_id) [pk]
  }
}

Table "seller" {
  "id" int(10) [pk, not null]
  "email" varchar(191) [not null]
  "password" varchar(191) [not null]
  "name" varchar(191) [not null]
  "dob" date [not null, note: 'dob stands for date of birth']
  "balance" decimal(10,0) [not null, default: "0"]
  "mobile_number" varchar(191) [not null]
  "idcard_number" varchar(191) [not null]
  "idcard_image" varchar(191) [not null]
  "verified_at" datetime [not null, note: 'is verified by admin or not']
  "mobile_verified_at" datetime [not null]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
  "deleted_at" timestamp [default: NULL]

  note: "table seller contains user information"
}

Table "seller_administration" {
  "id" int(10) [pk, not null]
  "branch" varchar(191) [not null]
  "bank" varchar(191) [not null]
  "account_number" varchar(191) [default: NULL]
  "account_name" varchar(191) [default: NULL]
  "npwp_number" varchar(191) [default: NULL]
  "npwp_name" varchar(191) [default: NULL]
  "npwp_address" varchar(191) [default: NULL]
  "npwp_image" varchar(191) [default: NULL]
  "seller_id"  int(10) [default: NULL, ref: - seller.id]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
  "deleted_at" timestamp [default: NULL]

  note: "table seller_administration contains bank & taxpayer registration number information"
}

Table "store" {
  "id" int(10) [pk, not null]
  "name" varchar(191) [not null]
  "description" text
  "slug" varchar(191) [not null, note: "A short label, containing only letters, numbers, underscores or hyphens. They’re generally used in URLs. Ex: samsung-store"]
  "country" varchar(191) [default: NULL]
  "mobile_number" varchar(191) [default: NULL]
  "address" varchar(191) [default: NULL]
  "city" varchar(191) [default: NULL]
  "city_id" varchar(191) [default: NULL, note: 'city_id from rajaongkir service']
  "province_id" varchar(191) [default: NULL, note: 'province_id from rajaongkir service']
  "state" varchar(191) [default: NULL]
  "subdistrict" varchar(191) [default: NULL]
  "zip" int(11) [default: NULL]
  "image" varchar(191) [default: NULL]
  "banner" varchar(191) [default: NULL]
  "couriers" varchar(191) [default: NULL]
  "seller_id"  int(10) [default: NULL, ref: - seller.id]


  note: "table store contains basic information about the user's store "
}


Table "customer" {
  "id" int(10) [pk, not null]
  "email" varchar(191) [default: NULL]
  "mobile_number" varchar(191) [default: NULL]
  "password" varchar(191) [default: NULL]
  "name" varchar(191) [default: NULL]
  "image" varchar(191) [default: NULL]
  "gender" varchar(191) [default: NULL]
  "dob" date [default: NULL, note: "dob stands for date of birth"]
  "balance" decimal(10,0) [not null, default: "0"]
  "provider" varchar(191) [default: NULL, note: 'provider name login service. ex: facebook']
  "provider_id" varchar(191) [default: NULL, note: 'id from login service']
  "email_token" varchar(191) [default: NULL, note: 'token for verify email']
  "email_verified_at" datetime [default: NULL]
  "mobile_verified_at" datetime [default: NULL]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
  "deleted_at" timestamp [default: NULL]

  note: "table 'customer' contain user credentials"
}

Table "customer_administration" {
  "id" int(10) [pk, not null]
  "branch" varchar(191) [default: NULL]
  "bank" varchar(191) [default: NULL]
  "account_number" varchar(191) [default: NULL]
  "account_name" varchar(191) [default: NULL]
  "customer_id" int(10) [default: NULL, ref: - customer.id]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]

  note: "this table contain customer's bank account information"
}


Table "recipient" {
  "id" int(10) [pk, not null]
  "customer_id" int(10) [default: NULL, ref: > customer.id]
  "name" varchar(191) [not null]
  "city" varchar(191) [default: NULL]
  "province" varchar(191) [default: NULL]
  "postal_code" varchar(191) [default: NULL]
  "isMain" tinyint(1) [not null, default: "0"]
  "mobile_number" varchar(191) [default: NULL]
  "address" varchar(191) [default: NULL]
  "province_id" varchar(191) [default: NULL, note: 'province_id from rajaongkir service']
  "city_id" varchar(191) [default: NULL, note: 'city_id from rajaongkir service']
  "label" varchar(191) [default: NULL]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
  "deleted_at" timestamp [default: NULL]

  note: "table 'recipient' to save multiple recipient addresses"
}

Table "banner_promotion" {
  "id" int(10) [pk, not null]
  "title" varchar(191) [default: NULL]
  "description" varchar(191) [default: NULL]
  "link" varchar(191) [default: NULL]
  "image" varchar(191) [not null]
  "position" int(11) [not null, default: "0"]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]

  note: "table banner_promotion contains a banner image for the front page of the website "
}

Table "faq_topic" {
  "id" int(10) [pk, not null]
  "name" varchar(191) [not null]
  "slug" varchar(191) [not null, note: "A short label, containing only letters, numbers, underscores or hyphens. They’re generally used in URLs."]
  "image" varchar(191) [default: NULL]
  "parent_id" int(10) [default: NULL, note: "if subtopic, this column will contain faq_topic id", ref: > faq_topic.id]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
  "deleted_at" timestamp [default: NULL]

  note: 'contains list of topic for FAQ'
}

Table "faq" {
  "id" int(10) [pk, not null]
  "question" varchar(191) [not null]
  "slug" varchar(191) [not null, note: "A short label, containing only letters, numbers, underscores or hyphens. They’re generally used in URLs."]
  "answer" text [not null]
  "satisfaction_status" tinyint(4) [default: NULL]
  "faq_topic_id" int(10) [default: NULL, ref: > faq_topic.id]
  "faq_subtopic_id" int(10) [default: NULL, ref: > faq_topic.id]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
  "deleted_at" timestamp [default: NULL]
}

Table "faq_report" {
  "id" int(10) [pk, not null]
  "faq_id" int(10) [not null, ref: > faq.id]
  "name" varchar(191) [not null]
  "email" varchar(191) [not null]
  "comment" text [not null]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
  "deleted_at" timestamp [default: NULL]
}

Table "article_category" {
  "id" int(10) [pk, not null]
  "name" varchar(191) [not null]
  "parent_id" int(10) [default: NULL, ref: > article_category.id]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
  "deleted_at" timestamp [default: NULL]
}


Table "tag" {
  "id" int(10) [pk, not null]
  "name" varchar(191) [not null]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
  "deleted_at" timestamp [default: NULL]

  note: "table contains article tag"
}

Table "article" {
  "id" int(10) [pk, not null]
  "category_id" int(10) [default: NULL, ref: > article_category.id]
  "sub_category_id" int(10) [default: NULL, ref: > article_category.id]
  "title" varchar(191) [not null]
  "slug" varchar(191) [not null, note: "A short label, containing only letters, numbers, underscores or hyphens. They’re generally used in URLs."]
  "is_page" tinyint(1) [not null, default: "0", note: "if value 1 then article category & sub category will be null, because page doesnt have category. page will be used for content term of service, privacy policy, etc."]
  "thumbnail" varchar(191) [default: NULL]
  "content" text
  "deleted_at" timestamp [default: NULL]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]

  note: "table contains list articles & pages"
}

Table "article_tag" {
  "id" int(10) [pk, not null]
  "article_id" int(10) [not null, ref: > article.id]
  "tags_id" int(10) [not null, ref: > tag.id]
}

Table "article_media" {
  "id" int(10) [pk, not null]
  "image" varchar(191) [not null]

  note: "table contains link of stored image when admin create articles. The image will be displayed in the text editor"
}

Table "article_report" {
  "id" int(10) [pk, not null]
  "article_id" int(10) [not null, ref: > article.id]
  "role" tinyint(4) [not null, note: "role column contains 1 or 0, if the value is 1 then user is customer if it is 0 then user is seller"]
  "user_id" int(11) [not null]
  "status" tinyint(4) [not null]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
  "deleted_at" timestamp [default: NULL]
}

Table "article_comment" {
  "id" int(10) [pk, not null]
  "article_id" int(10) [not null, ref: > article.id]
  "parent_id" int(10) [not null, ref: > article_comment.id]
  "comment" varchar(191) [not null]
  "user_id" int(11) [not null]
  "role" tinyint(4) [not null, note: "role column contains 1 or 0, if the value is 1 then user is customer if it is 0 then user is seller"]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
  "deleted_at" timestamp [default: NULL]
}

Table "article_comment_report" {
  "id" int(10) [pk, not null]
  "article_comment_id" int(10) [not null, ref: > article_comment.id]
  "role" tinyint(4) [not null, note: "role column contains 1 or 0, if the value is 1 then user is customer if it is 0 then user is seller"]
  "user_id" int(11) [not null]
  "status" tinyint(4) [not null]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
  "deleted_at" timestamp [default: NULL]
}

Table "brand" {
  "id" int(10) [pk, not null]
  "name" varchar(191) [not null]
  "logo" varchar(191) [default: NULL]
  "featured" tinyint(1) [not null]
  "deleted_at" timestamp [default: NULL]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
}

Table "category" {
  "id" int(10) [pk, not null]
  "name" varchar(191) [not null]
  "image_category" varchar(191) [not null]
  "parent_id" int(10) [default: NULL, ref: > category.id]
  "deleted_at" timestamp [default: NULL]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]

  note: "table contains category of product"
}

Table "keyword" {
  "id" int(10) [pk, not null]
  "keyword" varchar(191) [not null]

  note: 'table "keyword" contains keyword of product'
}

Table "item" {
  "id" int(10) [pk, not null]
  "name" varchar(191) [not null]
  "slug" varchar(191) [not null, note: "A short label, containing only letters, numbers, underscores or hyphens. They’re generally used in URLs."]
  "sku" varchar(191) [default: NULL, note: "sku stands for Stock Keeping Unit, SKU is the standard term used in inventory management. Every store, shop, warehouse, etc calls an item as 'SKU'"]
  "store_id" int(10) [default: NULL, ref: > store.id]
  "brand_id" int(10) [default: NULL, ref: > brand.id]
  "sub_sub_category_id" int(10) [not null, ref: > category.id]
  "size" varchar(191) [default: NULL, note: "size of product"]
  "rating_count" int(11) [not null, default: "0"]
  "rating" double(8,2) [default: NULL]
  "weight" double(8,2) [default: NULL, note: 'product weight in grams']
  "thumbnail" varchar(191) [default: NULL, note: 'thumbnail or model photo for the product']
  "description" text
  "featured" tinyint(4) [default: NULL]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
  "deleted_at" timestamp [default: NULL]
}

Table "item_image" {
  "id" int(10) [pk, not null]
  "item_id" int(10) [not null, ref: > item.id]
  "image" varchar(191) [not null]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
  "deleted_at" timestamp [default: NULL]

  note: 'table "item_image" contains images of product'
}

Table "item_variant" {
  "id" int(10) [pk, not null]
  "slug" varchar(191) [not null, note: "A short label, containing only letters, numbers, underscores or hyphens. They’re generally used in URLs."]
  "item_id" int(10) [not null, ref: > item.id]
  "color" varchar(191) [default: NULL, note: 'color in hex code. ex: #0000']
  "shade" varchar(191) [default: NULL, note: 'name of color. ex: Naked Plum, Pink Sequin, Pink Tulle, Lip Glace']
  "size" varchar(191) [default: NULL, note: 'size of product. ex: besar, kecil, 200L']
  "quantity" int(11) [not null, default: "0"]
  "price" int(11) [default: NULL]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
  "deleted_at" timestamp [default: NULL]

  note: 'table contains list variants of item. if the item doesnt have variant then will have item_variant with null value of color, shade and size'
}

Table "item_report" {
  "id" int(10) [pk, not null]
  "item_id" int(10) [not null, ref: > item.id]
  "customer_id" int(11) [not null, ref: > customer.id]
  "status" int(11) [default: NULL]
  "description" varchar(191) [default: NULL]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
}

Table "item_discussion" {
  "id" int(10) [pk, not null]
  "item_id" int(10) [not null, ref: > item.id]
  "user_id" int(11) [not null]
  "role" tinyint(4) [not null, note: "role column contains 1 or 0, if the value is 1 then user is customer if it is 0 then user is seller"]
  "parent_id" int(11) [default: NULL, ref: > item_discussion.id]
  "discussion" varchar(191) [not null]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
}

Table "item_discussion_report" {
  "id" int(10) [pk, not null]
  "item_discussion_id" int(10) [not null, ref: > item_discussion.id]
  "user_id" int(11) [not null]
  "role" tinyint(4) [not null, note: "role column contains 1 or 0, if the value is 1 then user is customer if it is 0 then user is seller"]
  "status" tinyint(4) [not null]
  "description" varchar(191) [default: NULL]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
}

Table "wishlist" {
  "id" int(10) [pk, not null]
  "customer_id" int(10) [default: NULL, ref: > customer.id]
  "item_id" int(10) [default: NULL, ref: > item.id]
  "item_variant_id" int(10) [default: NULL, ref: > item_variant.id]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
  "deleted_at" timestamp [default: NULL]

  note: 'Table "wishlist" contains product selected by customer'
}

Table "cart" {
  "id" int(10) [pk, not null]
  "item_id" int(10) [not null, ref: > item.id]
  "customer_id" int(10) [not null, ref: > customer.id]
  "store_id" int(10) [not null, ref: > store.id]
  "item_quantity" int(11) [not null]
  "price" bigint(20) [default: NULL]
  "shipping_price" bigint(20) [not null, default: "0"]
  "item_variant_id" int(10) [default: NULL, ref: > item_variant.id]
  "discount_id" int(10) [default: NULL]
  "coupon_store_id" int(10) [default: NULL, note: 'coupon store']
  "coupon_id" int(10) [default: NULL, note: 'coupon beautymates']
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
}

Enum "coupon_type_enum" {
  "free_ongkir"
  "exact_value"
  "discount"
}

Table "coupon" {
  "id" int(10) [pk, not null]
  "name" varchar(191) [not null]
  "thumbnail" varchar(191) [default: NULL]
  "code" varchar(191) [not null]
  "description" text [not null]
  "type" coupon_type_enum [not null]
  "value" double(8,2) [not null, note: "value of coupon can be percent without (%) or nominal depends type of coupon"]
  "maximum" double(8,2) [default: NULL, note: "maximum price requirement of product for apply the coupon"]
  "minimum" double(8,2) [not null, note: "minimum price requirement of product for apply the coupon"]
  "quota" int(10) [not null, note: "amount of quota for customers who can apply coupon"]
  "store_id" int(10) [default: NULL, ref: > store.id, note: "if store_id is null, then the coupon is Beautymates coupon"]
  "start_period" datetime [not null]
  "end_period" datetime [not null]
  "isActivated" tinyint(1) [not null, note: 'is coupon active or not']
  "isAllItems" tinyint(1) [not null, note: 'if value 0, then will be relation with coupon_item table']
  "isDisposable" tinyint(1) [not null, default: "0"]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]

  note: 'Table "coupon" contains coupon information'
}

Table "coupon_customer" {
  "id" int(10) [pk, not null]
  "customer_id" int(10) [not null, ref: > customer.id]
  "coupon_id" int(10) [not null, ref: > coupon.id]
  "is_redeemed" tinyint(1) [not null, default: "0", note: 'already used or not']

  note: 'Table "coupon_customer" contains list of customers who have already claimed coupon'
}

Table "coupon_item" {
  "id" int(10) [pk, not null]
  "coupon_id" int(10) [not null, ref: > coupon.id]
  "item_variant_id" int(10) [not null, ref: > item_variant.id]

  note: 'Table "coupon_item" contains a list of products that can use a coupon'
}

Ref: cart.coupon_id > coupon.id
Ref: cart.coupon_store_id > coupon.id

Table "discount" {
  "id" int(10) [pk, not null]
  "name" varchar(191) [not null]
  "type" varchar(191) [not null]
  "amount_nominal" int(11) [default: NULL]
  "amount_percentage" int(11) [default: NULL]
  "start_period" datetime [not null]
  "end_period" datetime [not null]
  "isAllItems" tinyint(1) [not null, note: 'if value 0, then will be relation with discount_item table']
  "store_id" int(10) [default: NULL, ref: > store.id]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]

  note: 'Table "discount" contains discount information'
}

Ref: cart.discount_id > discount.id

Table "discount_item" {
  "id" int(10) [pk, not null]
  "discount_id" int(10) [not null, ref: > discount.id]
  "isActivated" tinyint(1) [not null, default: "0",  note: 'is discount active or not']
  "item_variant_id" int(10) [not null, ref: > item_variant.id]

  note: 'Table "discount_item" contains a list of products that get a discount'
}

Table "payment" {
  "id" int(10) [pk, not null]
  "payment_type" varchar(191) [not null]
  "bank" varchar(191) [default: NULL]
  "store" varchar(191) [default: NULL]
  "card_type" varchar(191) [default: NULL]
  "payment_code" varchar(191) [default: NULL]
  "transaction_time" datetime [not null]
  "settlement_time" datetime [default: NULL]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]

  note: 'This table contains payment information'
}

Enum "invoice_payment_status_enum" {
  "waiting-payment"
  "capture"
  "failure"
  "challenge"
  "cancel"
  "settlement"
  "expire"
}

Table "invoice" {
  "id" int(10) [pk, not null]
  "number" varchar(191) [not null]
  "order_id" varchar(191) [not null, note: "order id generated from midtrans service"]
  "customer_id" int(10) [not null, ref: > customer.id]
  "recipient_id" int(10) [not null, ref: > recipient.id]
  "recipient_name" varchar(191) [not null]
  "recipient_address" varchar(191) [not null]
  "recipient_mobile_number" varchar(191) [not null]
  "subtotal_order" decimal(10,0) [not null]
  "subtotal_shipment" decimal(10,0) [not null]
  "coupon_id" int(10) [default: NULL, ref: > coupon.id]
  "total_discount" decimal(10,0) [not null, default: "0"]
  "total_payment" decimal(10,0) [not null, default: "0"]
  "payment_id" int(10) [default: NULL, ref: > payment.id]
  "payment_status" invoice_payment_status_enum [not null, default: "waiting-payment"]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
}

Enum "order_status_enum" {
  "cancel-payment"
  "waiting-payment"
  "settlement"
  "confirm"
  "cancel-progress"
  "cancel-by-customer"
  "cancel-by-seller"
  "shipping"
  "delivered"
  "complain"
  "expire"
}

Table "order" {
  "id" int(10) [pk, not null]
  "store_id" int(10) [not null, ref: > store.id]
  "customer_id" int(10) [not null, ref: > customer.id]
  "invoice_id" int(10) [not null, ref: > invoice.id]
  "shipping_courier" varchar(191) [default: NULL]
  "shipping_company" varchar(191) [default: NULL]
  "shipping_service" varchar(191) [default: NULL]
  "shipping_day" varchar(191) [default: NULL]
  "shipping_waybill" varchar(191) [default: NULL]
  "shipping_price" decimal(10,0) [not null]
  "shipping_time" datetime [default: NULL]
  "order_price" decimal(10,0) [not null]
  "commission_fee" decimal(10,0) [not null]
  "final_price" decimal(10,0) [not null]
  "confirm_time" datetime [default: NULL]
  "status" order_status_enum [not null, default: "waiting-payment"]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
}

Table "order_item" {
  "id" int(10) [pk, not null]
  "order_id" int(10) [not null, ref: > order.id]
  "discount_id" int(10) [default: NULL, ref: > discount.id]
  "item_id" int(10) [not null, ref: > item.id]
  "item_variant_id" int(10) [not null, ref: > item_variant.id]
  "item_name" varchar(191) [not null]
  "item_description" varchar(191) [not null]
  "item_thumbnail" varchar(191) [not null]
  "price" decimal(10,0) [not null]
  "order_quantity" int(11) [not null]
  "final_price" decimal(10,0) [not null]
  "review_id" int(10) [default: NULL, ref: > review.id]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
}

Enum "order_cancel_cancel_type_enum" {
  "change-order"
  "change-courier"
  "product-constraints"
  "seller-not-responsive"
  "store"
}

Enum "order_cancel_cancel_reason_enum" {
  "want-to-change-the-product-purchased"
  "want-to-change-the-number-of-products-purchased"
  "want-to-buy-other-products-in-this-store"
  "want-to-cancel-buying-some-products"
  "want-to-change-product-variants"
  "want-to-change-the-shipping-address"
  "want-to-change-the-delivery-duration"
  "stock-variant-less-than-the-amount-ordered"
  "some-of-the-products-ordered-are-not-available"
  "all-products-ordered-are-not-available"
  "poor-product-reputation"
  "seller-slow-not-responding"
  "store-is-closed-cannot-serve-order"
  "item-never-sent-by-seller"
  "product-out-of-stock"
  "variant-is-not-avalaible"
  "wrong-price-or-product-weight"
  "the-store-is-closed"
  "courier-constraint"
}

Enum "order_cancel_status_enum" {
  "unread"
  "waiting-response"
  "seller-refuse"
  "process"
  "finished"
}

Table "order_cancel" {
  "id" int(10) [pk, not null]
  "order_id" int(10) [not null, ref: > order.id]
  "cancel_type" order_cancel_cancel_type_enum [not null]
  "cancel_reason" order_cancel_cancel_reason_enum [not null]
  "role" int(11) [not null, note: "role column contains 1 or 0, if the value is 1 then user is customer if it is 0 then user is seller"]
  "status" order_cancel_status_enum [not null]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
}

Enum "complaint_complaint_type_enum" {
  "incomplete-product"
  "damaged-product"
  "product-does-not-match-description"
}

Enum "complaint_submission_type_enum" {
  "waiting-response"
  "return-item-with-balance"
  "exchange-item"
  "incomplete-item"
}

Enum "complaint_status_enum" {
  "unread"
  "waiting-response"
  "seller-refused"
  "process"
  "customer-shipping"
  "seller-shipping"
  "finished"
}

Table "complaint" {
  "id" int(10) [pk, not null]
  "order_id" int(10) [not null, ref: > order.id]
  "complaint_type" complaint_complaint_type_enum [not null]
  "complaint" text [not null]
  "submission_type" complaint_submission_type_enum [not null, default: "waiting-response"]
  "status" complaint_status_enum [not null, default: "unread"]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
}

Table "complaint_discussion" {
  "id" int(10) [pk, not null]
  "complaint_id" int(10) [not null, ref: > complaint.id]
  "role" tinyint(4) [not null, note: "role column contains 1 or 0, if the value is 1 then user is customer if it is 0 then user is seller"]
  "user_id" int(11) [not null]
  "discussion" text [not null]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
}

Table "complaint_image" {
  "id" int(10) [pk, not null]
  "complaint_id" int(10) [not null, ref: > complaint.id]
  "image" varchar(191) [not null]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
}

Enum "complaint_shipping_status_enum" {
  "confirm"
  "shipping"
  "delivered"
}

Table "complaint_shipping" {
  "id" int(10) [pk, not null]
  "complaint_id" int(10) [not null, ref: > complaint.id]
  "shipping_courier" varchar(191) [not null]
  "waybill" varchar(191) [not null, note: 'delivery number']
  "status" complaint_shipping_status_enum [not null, default: "confirm"]
  "sender" tinyint(4) [not null]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
}

Enum "store_rejections_type_enum" {
  "order_cancel"
  "complaint"
}

Enum "store_rejections_status_enum" {
  "waiting-response"
  "accept"
  "reject"
}

Table "store_rejections" {
  "id" int(10) [pk, not null]
  "type" store_rejections_type_enum [not null]
  "type_id" int(11) [not null, note: 'id of complaint or order_cancel table']
  "reason" text [not null]
  "image" varchar(191) [not null]
  "status" store_rejections_status_enum [not null, default: "waiting-response"]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
}

Table "review" {
  "id" int(10) [pk, not null]
  "customer_id" int(10) [not null, ref: > customer.id]
  "store_id" int(10) [not null, ref: > store.id]
  "item_id" int(10) [default: NULL, ref: > item.id]
  "rating" int(11) [default: NULL]
  "subject" varchar(191) [default: NULL]
  "description" text
  "satisfaction_status" tinyint(4) [default: NULL]
  "respon_seller" varchar(191) [default: NULL]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
  "deleted_at" timestamp [default: NULL]
}

Table "review_image" {
  "id" int(10) [pk, not null]
  "review_id" int(10) [not null, ref: > review.id]
  "image" varchar(191) [not null]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
}

Table "review_report" {
  "id" int(10) [pk, not null]
  "review_id" int(10) [not null, ref: > review.id]
  "user_id" int(11) [not null]
  "role" tinyint(4) [not null, note: "role column contains 1 or 0, if the value is 1 then user is customer if it is 0 then user is seller"]
  "status" tinyint(4) [not null]
  "description" varchar(191) [default: NULL]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
}

Table "balance_in" {
  "id" int(10) [pk, not null]
  "order_id" int(10) [not null, ref: > order.id]
  "role" tinyint(4) [not null, note: "role column contains 1 or 0, if the value is 1 then user is customer if it is 0 then user is seller"]
  "user_id" int(11) [not null]
  "amount" decimal(10,0) [not null]
  "current_balance" decimal(10,0) [not null]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]

  note: 'Table "balance_in" contain user transactions'
}

Table "balance_out" {
  "id" int(10) [pk, not null]
  "role" tinyint(4) [not null, note: "role column contains 1 or 0, if the value is 1 then user is customer if it is 0 then user is seller"]
  "user_id" int(11) [not null]
  "amount" decimal(10,0) [not null]
  "current_balance" decimal(10,0) [not null]
  "status" tinyint(4) [not null]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]

  note: 'Table "balance_out" contain user withdrawal'
}

Table "balance_history" {
  "id" int(10) [pk, not null]
  "user_id" int(11) [not null]
  "role" tinyint(4) [not null, note: "role column contains 1 or 0, if the value is 1 then user is customer if it is 0 then user is seller"]
  "title" varchar(191) [not null]
  "description" varchar(191) [not null]
  "balance_id" int(11) [not null]
  "balance_type" varchar(191) [not null]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]

  note: 'Table "balance_history" contains information on the withdrawal process'
}

Table "like" {
  "id" int(10) [pk, not null]
  "table_type" varchar(191) [not null, note: 'the value must contains: article, article_comment or review']
  "table_id" int(11) [not null, note: 'id of some table']
  "user_type" varchar(191) [not null, note: 'the value must contain: seller or customer']
  "user_id" varchar(191) [not null, note: 'id seller or customer']
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]

  note: 'Table Like'
}

Table "follower" {
  "id" int(10) [pk, not null]
  "store_id" int(10) [not null]
  "customer_id" int(10) [not null]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
  "deleted_at" timestamp [default: NULL]
}

Table "following" {
  "id" int(10) [pk, not null]
  "customer_id" int(10) [not null]
  "store_id" int(10) [not null]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
  "deleted_at" timestamp [default: NULL]
}

Table "notification" {
  "id" char(36) [pk, not null]
  "type" varchar(191) [not null]
  "notifiable_type" varchar(191) [not null]
  "notifiable_id" bigint(20) [not null]
  "data" text [not null]
  "read_at" timestamp [default: NULL]
  "created_at" timestamp [default: NULL]
  "updated_at" timestamp [default: NULL]
}

Table "migration" {
  "id" int(10) [pk, not null]
  "migration" varchar(191) [not null]
  "batch" int(11) [not null]
}